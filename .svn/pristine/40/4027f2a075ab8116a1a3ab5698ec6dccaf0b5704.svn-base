<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
  <display-name></display-name>	
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  
  <!-- 请求放回数据乱码 -->
    <filter>
    <filter-name>CharacterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
	    <init-param>
		    <param-name>encoding</param-name>
		    <param-value>UTF-8</param-value>
	    </init-param>  
	    <init-param>             
		    <param-name>forceEncoding</param-name>             
		    <param-value>true</param-value>         
	    </init-param>
    </filter>   
    <filter-mapping>         
    <filter-name>CharacterEncodingFilter</filter-name>         
    <url-pattern>/*</url-pattern>     
    </filter-mapping>
      <!-- 请求放回数据乱码  结束 -->
    
   <!-- 数据库设置 -->
 <filter>
		<filter-name>openSessionInViewFilter</filter-name>
		<filter-class>
			org.springframework.orm.hibernate4.support.OpenSessionInViewFilter
		</filter-class>
    </filter>
	<filter-mapping>
		<filter-name>openSessionInViewFilter</filter-name>
		<!-- 也为当前请求路径当请求为*。do时自动创建数据库session <url-pattern>*.do</url-pattern>-->
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	  <!-- 数据库设置 dddd=============================-->
	  
	  
  <servlet>
    <servlet-name>spring</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
<!--     可以自定义servlet.xml配置文件的位置和名称，默认为WEB-INF目录下，名称为[<servlet-name>]-servlet.xml，如spring-servlet.xml
 -->    <init-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/spring-*.xml</param-value>
    </init-param>
    <load-on-startup>9</load-on-startup>
</servlet>

<servlet-mapping>
    <servlet-name>spring</servlet-name>
    <url-pattern>*.do</url-pattern>
</servlet-mapping>

<!-- 添加监听加载xml -->
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener> 
      <context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>
	<!-- 加载xml结束 -->
	
<!-- 	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>
			org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> -->
	
<!--   <filter>
	  <filter-name>SqlInjectFilter</filter-name>
	  	<filter-class>com.common.filter.SqlInjectFilter</filter-class>
	  	<init-param>  
           <param-name>noLoginPaths</param-name>  
           <param-value>login.jsp;fail.jsp;LoginServlet</param-value>  
       </init-param>  
	  </filter>
	  <filter-mapping>
	  	<filter-name>SqlInjectFilter</filter-name>
	  	<url-pattern>*</url-pattern>
  </filter-mapping> -->
  
    <!-- 注意下面这个过滤器名称要跟下面的spring-context.xml的相同 -->  
<!--   <filter>  
    <filter-name>SqlInjectFilter</filter-name>   
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>  
    <init-param>  
        <param-name>targetFilterLifecycle</param-name>  
        <param-value>true</param-value>  
    </init-param>  
</filter>  
	<filter-mapping>  
   		 <filter-name>SqlInjectFilter</filter-name>  
    	<url-pattern>/*</url-pattern>  
	</filter-mapping>  -->
	
<!-- 	  <filter>
	  <filter-name>SessionFilter</filter-name>
	  	<filter-class>com.common.filter.SessionFilter</filter-class>
	  	<init-param>  
           <param-name>noLoginPaths</param-name>  
           <param-value>login.jsp;png;jpg;login3.do;js;css;gif;html</param-value>  
       </init-param>  
	  </filter>
	  <filter-mapping>
	  	<filter-name>SessionFilter</filter-name>
	  	<url-pattern>*</url-pattern>
  </filter-mapping>  -->


<!-- 	<listener>   
		<listener-class>   
			com.common.filter.SessionListener   
		</listener-class>   
	</listener>  
	<session-config>  
	    <session-timeout>1</session-timeout>  
	</session-config>  
 -->

	</web-app>
